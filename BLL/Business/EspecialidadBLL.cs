///////////////////////////////////////////////////////////
//  EspecialidadBLL.cs
//  Implementation of the Class EspecialidadBLL
//  Generated by Enterprise Architect
//  Created on:      18-ago.-2022 20:47:22
//  Original author: Ailin
///////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Domain;
using BLL.Interfaces;
using Services.BLL.Dto;
using Services.MapperConfig;
using Services;
using DAL.Interfaces;

namespace BLL.Business {
	public class EspecialidadBLL : IGenericBusiness<EspecialidadDto>
    {



        private readonly static EspecialidadBLL _instance = new EspecialidadBLL();


        public static EspecialidadBLL Current
        {
            get
            {
                return _instance;
            }
        }

        IGenericRepository<Especialidad> genericRepository = FactoryDAL._especialidadRepository;


        //      /// 
        //      /// <param name="especialidad"></param>
        //      public void AgregarEspecialidad(Especialidad especialidad){

        //}

        ///// 
        ///// <param name="int"></param>
        //public void BajaEspecialidad(int id){

        //}

        //public List<Especialidad> ListarEspecialidad(){

        //	return null;
        //}

        ///// 
        ///// <param name="especialidad"></param>
        //public void ModificarExpecialidad(Especialidad especialidad){

        //}

        public void Insert(EspecialidadDto obj)
        {
            var dtoToentity = new Especialidad()
            {
                id = obj.id,
                especialidad = obj.especialidad,

            };
            genericRepository.Insert(dtoToentity);
        }

        public void Update(EspecialidadDto obj)
        {
            var dtoToentity = new Especialidad()
            {
                id = obj.id,
                especialidad = obj.especialidad,

            };
            genericRepository.Update(dtoToentity);
        }

        public IEnumerable<EspecialidadDto> GetAll()
        {
            var entity = MapperHelper.GetMapper().
         Map<List<EspecialidadDto>>(genericRepository.GetAll());

            return entity;
        }

        public EspecialidadDto GetOne(int? guid)
        {
            var op = MapperHelper.GetMapper().Map<EspecialidadDto>(genericRepository.GetOne(guid));

            return op;
        }

        public void Delete(int? guid)
        {
            var op = genericRepository.GetOne(guid);
            if (op != null)
            {
                genericRepository.Delete(op);
            }
        }
    }//end EspecialidadBLL

}//end namespace BLL